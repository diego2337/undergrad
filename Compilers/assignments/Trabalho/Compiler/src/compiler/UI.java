package compiler;

import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.JFileChooser;

public class UI extends javax.swing.JFrame {

    String name;
    /**
     * Creates new form UI
     */
    public UI() {
        initComponents();
        name = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        textarea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        textarea2 = new javax.swing.JTextArea();
        CompilarBt = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        Arquivo = new javax.swing.JMenu();
        Abrir = new javax.swing.JMenuItem();
        Salvar = new javax.swing.JMenuItem();
        Fechar = new javax.swing.JMenuItem();

        fileChooser.setDialogTitle("Abrir Arquivo");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textarea.setColumns(20);
        textarea.setRows(5);
        jScrollPane1.setViewportView(textarea);

        textarea2.setColumns(20);
        textarea2.setRows(5);
        jScrollPane2.setViewportView(textarea2);

        CompilarBt.setText("Compilar");
        CompilarBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompilarBtActionPerformed(evt);
            }
        });

        Arquivo.setText("Arquivo");

        Abrir.setText("Abrir");
        Abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirActionPerformed(evt);
            }
        });
        Arquivo.add(Abrir);

        Salvar.setText("Salvar");
        Salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalvarActionPerformed(evt);
            }
        });
        Arquivo.add(Salvar);

        Fechar.setText("Fechar");
        Fechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FecharActionPerformed(evt);
            }
        });
        Arquivo.add(Fechar);

        jMenuBar1.add(Arquivo);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(327, 327, 327)
                .addComponent(CompilarBt)
                .addContainerGap(348, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(CompilarBt)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalvarActionPerformed
        int returnVal = fileChooser.showSaveDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION)
        {
            File file = fileChooser.getSelectedFile();
            PrintWriter out = null;
            try {
                out = new PrintWriter(file);
                String output = textarea.getText();
                out.println(output);
                name = file.getName();
            } catch (Exception ex) {
                ex.printStackTrace();
            } finally {
                try {out.flush();} catch(Exception ex1) {}
                try {out.close();} catch(Exception ex1) {}
            }
	}
    }//GEN-LAST:event_SalvarActionPerformed

    private void AbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirActionPerformed
        int returnVal = fileChooser.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION)
        {
            File file = fileChooser.getSelectedFile();
            try
            {
                textarea.read(new FileReader(file.getAbsolutePath()), null);
                name = file.getName();
            }
            catch(IOException ex)
            {
                textarea.append("Problema ao abrir o arquivo"+file.getAbsolutePath());
            }
        }
    }//GEN-LAST:event_AbrirActionPerformed

    private void FecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FecharActionPerformed
        System.exit(0);
    }//GEN-LAST:event_FecharActionPerformed

    private void CompilarBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CompilarBtActionPerformed

        Parser parser = new Parser(name, textarea2);
        if(parser.flag == 0)
        {
            Semantic semantic = new Semantic(parser.Program(), parser.globalTS, textarea2);
            //System.out.printf("Análise sintática concluída. Número de linhas: %d\n", parser.lToken.lines);
            textarea2.append("Análise sintática concluída. Número de linhas: " +(parser.lToken.lines-1)+ "\n");
            semantic.analyze();
            textarea2.append("Fim do processo de análise\n\n\n");
        }
    }//GEN-LAST:event_CompilarBtActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Abrir;
    private javax.swing.JMenu Arquivo;
    private javax.swing.JButton CompilarBt;
    private javax.swing.JMenuItem Fechar;
    private javax.swing.JMenuItem Salvar;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea textarea;
    private javax.swing.JTextArea textarea2;
    // End of variables declaration//GEN-END:variables
}
