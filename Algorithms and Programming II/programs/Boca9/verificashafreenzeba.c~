#include

#define MAX 20
#define true 1
#define false 0

int top = -1; /*top pointer for stack*/
int stack[MAX]; /*stack*/

void push(char);/*function prototypes*/
char pop();

int main()
{
char exp[MAX],temp;
int i,valid=true;

printf("Enter an algebraic expression : ");
gets(exp);

for(i=0;i<=MAX;i++)
{
if(exp[i]=='(' || exp[i]=='{' || exp[i]=='[')
push( exp[i] );

if(exp[i]==')' || exp[i]=='}' || exp[i]==']')
if(top == -1)
valid=false;
else
{
temp=pop();
if( exp[i]==')' && (temp=='{' || temp=='[') )
valid=false;
if( exp[i]=='}' && (temp=='(' || temp=='[') )
valid=false;
if( exp[i]==']' && (temp=='(' || temp=='{') )
valid=false;
}
}

if(top >= 0)
valid=false;

if( valid==true )
printf("Valid expression…\n");
else
printf("Invalid expression…\n");
return 0;
}

void push(char item)
{
if(top == (MAX-1))
printf("Stack Overflow\n");
else
{
top=top+1;
stack[top] = item;
}
}

char pop()
{
if(top == -1)
printf("Stack Underflow\n");
else
return(stack[top--]);
return 0;
}

